{"version":3,"file":"employers.component.js","sourceRoot":"","sources":["../../home/alaor/workspace/bh_emprs/project/tmp/broccoli_type_script_compiler-input_base_path-bXuwbzXa.tmp/0/src/app/employers/employers.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,sBAIkC,gBAAgB,CAAC,CAAA;AAEnD,kCAAiC,qBAAqB,CAAC,CAAA;AAUvD;IAKE,4BAAoB,WAAwB,EAAU,gBAAkC,EAAU,MAAc;QAA5F,gBAAW,GAAX,WAAW,CAAa;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFhH,cAAS,GAAU,EAAE,CAAC;IAE8F,CAAC;IAErH,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,yCAAY,GAAZ;QAAA,iBAaC;QAZC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;aAC5B,SAAS,CACR,UAAA,IAAI;YACF,IAAM,OAAO,GAAG,EAAE,CAAC;YACnB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1B,CAAC;YACD,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC5B,CAAC;IACN,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAUC;QARC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aACpD,SAAS,CACR,UAAA,IAAI;YACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC5B,CAAC;IACN,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,IAAI,mBAAW,CAAC,IAAI,CAAC;YAC5B,IAAI,EAAG,IAAI,mBAAW,CAAC,IAAI,CAAC;YAC5B,GAAG,EAAG,IAAI,mBAAW,CAAC,IAAI,CAAC;YAC3B,GAAG,EAAG,IAAI,mBAAW,CAAC,IAAI,CAAC;SAC5B,CAAC,CAAC;IACL,CAAC;IAtDH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,0BAA0B;YACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;YACtC,SAAS,EAAE,CAAC,mBAAW,EAAE,oCAAgB,CAAC;YAC1C,UAAU,EAAE,CAAC,gCAAwB,CAAC;SACvC,CAAC;;0BAAA;IAiDF,yBAAC;AAAD,CAAC,AAhDD,IAgDC;AAhDY,0BAAkB,qBAgD9B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormControl,\n  REACTIVE_FORM_DIRECTIVES } from '@angular/forms';\n\nimport { EmployersService } from './employers.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-employers',\n  templateUrl: 'employers.component.html',\n  styleUrls: ['employers.component.css'],\n  providers: [FormBuilder, EmployersService],\n  directives: [REACTIVE_FORM_DIRECTIVES]\n})\nexport class EmployersComponent implements OnInit {\n\n  employerForm : FormGroup;\n  employers: any[] = [];\n\n  constructor(private formBuilder: FormBuilder, private employersService: EmployersService, private router: Router) { }\n\n  ngOnInit() {\n    this.initForm();\n    this.getEmployers();\n  }\n\n  getEmployers(){\n    this.employersService.getData()\n      .subscribe(\n        data => {\n          const myArray = [];\n          for (let key in data) {\n            myArray.push(data[key]);\n          }\n          this.employers = myArray;\n          console.log(this.employers);\n        },\n        error => console.log(error)\n      );\n  }\n\n  onSubmit(){\n\n    this.employersService.sendData(this.employerForm.value)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.router.navigate(['/home']);\n        },\n        error => console.log(error)\n      );\n  }\n\n  initForm(){\n    this.employerForm = this.formBuilder.group({\n      label: new FormControl(null),\n      info : new FormControl(null),\n      lat : new FormControl(null),\n      lng : new FormControl(null)\n    });\n  }\n\n}\n"]}